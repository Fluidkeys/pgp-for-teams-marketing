@import 'reset';

$font-size:    16px;
$line-height-ratio: 1.5;
$line-height-base:  1rem * $line-height-ratio;
// base line-height = 16px * 1.5 = 24px

$white: #ffffff;
$dark-grey: #232732;
$light-grey: #efefef;
$mid-grey: #8c8c8c;
$button-primary: #d33d5c;
$button-hover: #3DA450;
$light-green: #00BB3D;

$terminal-light-red: #F05350;

html {
  font-size:    $font-size;
  line-height:  $line-height-ratio;
  // background:   url(http://basehold.it/i/24);
  background: $white;
}

* {
  margin-top:     0;
  margin-bottom:  0;
  padding-top:    0;
  padding-bottom: 0;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin vertical-rhythm($font-size, $bottom-rows: 1, $top-rows: 0, $use-height: false, $border: 0rem) {
  $font-size: $font-size;
  $border: $border;
  $multiplier: ceil($font-size / $line-height-base);

  // check if height-based element
  // if so use height property for height, otherwise use line-height property
  @if $use-height {
    $leftover:      $line-height-base * $multiplier - $font-size;
    height:         $font-size;
    margin-top:     $line-height-base * $top-rows + $leftover / 2;
    margin-bottom:  $line-height-base * $bottom-rows + $leftover / 2;
  }
  @else { // text based element (uses line-height)
    font-size:      $font-size;
    line-height:    $line-height-base * $multiplier;
    margin-top:     $line-height-base * $top-rows;
    margin-bottom:  $line-height-base * $bottom-rows - $border;
  }
}

$breakpoints: (
  break-0: 0,     // 0px       Mobile first
  break-1: 640,   // 640px   ~ Small tablet up
  break-2: 800,   // 800px   ~ Large tablet up
  break-3: 1024,  // 1024px  ~ Desktop up
  break-4: 1600   // 1600px  ~ Large desktop up
) !default;

@mixin breakpoint($break: 0, $max: 0) {
  // Type of break variable
  $value: type-of($break);

  // If it is a string (i.e. a breakpoint variable).
  @if $value == string {
    // If using 'break-1', 'break-2' etc output the correct breakpoints from map.
    @if map-has-key($breakpoints, $break) {
      @media screen and (min-width: #{map-get($breakpoints, $break) / 16 * 1em} ) { @content; }
    } @else {
      @warn "#{$break} is not a set breakpoint variable";
    }

  // If it is a number, use this for the breakpoint.
  } @else if $value == number {
    // If using other numbers output value in ems either for min, min & max or max width breakpoints.
    $query: "all" !default;
    @if      $break != 0 and $max != 0 { $query: "(min-width: #{$break / 16 * 1em}) and (max-width: #{$max / 16 * 1em})"; }
    @else if $break != 0 and $max == 0 { $query: "(min-width: #{$break / 16 * 1em})"; }
    @else if $break == 0 and $max != 0 { $query: "(max-width: #{$max / 16 * 1em})"; }
    @media #{$query} { @content; }

  } @else {
    @warn "#{$break} is not valid to use as a breakpoint";
  }
}

body {
  overflow-x: hidden;
}

h1, h2, h3, h4 {
  font-family: 'Montserrat', sans-serif;
  font-weight: 500;
}

h2 {
  @include vertical-rhythm(2.2rem, 1, 0);
  color: $button-primary;
}

p, ul, ol {
    @include vertical-rhythm(1rem, 1, 0);
    font-family: 'Merriweather', sans-serif;
    em {
      font-style: italic;
    }
}

strong {
  font-weight: bold;
}

a {
  color: $button-primary;
}

pre {
  font-family: 'Inconsolata', monospace;
  background: $light-grey;
  border: 1px solid #CCCCCC;
  padding: 0.5rem;
  @include vertical-rhythm(1rem, 1, 1);
  @include border-radius(3px);
  white-space: pre-wrap;       /* css-3 */
 white-space: -moz-pre-wrap;  /* Mozilla, since 1999 */
 white-space: -pre-wrap;      /* Opera 4-6 */
 white-space: -o-pre-wrap;    /* Opera 7 */
 word-wrap: break-word; 
}

p {
  code {
    font-family: 'Inconsolata', monospace;
    background: $light-grey;
    padding: 3px;
    margin: 0 4px;
    @include border-radius(2px);
  }
}

.terminal-wrapper {
  background: #1C1C1C;
  margin: 0 -#{$line-height-base};
  padding: #{$line-height-base * 0.5} 2px;
  @include breakpoint(break-1) {
    padding: #{$line-height-base};
    @include border-radius(#{$line-height-base * 0.5});
  }
}

blockquote {
  border-left: 1px solid $button-primary;
  padding-left: #{$line-height-base}
}

p.button {
  a {
    @include vertical-rhythm(1rem, 0.25, 0.25);
    text-align: center;
    border: 0;
    padding: #{$line-height-base * 0.5} #{$line-height-base * 2};
    background-color: $button-primary;
    text-decoration: none;
    color: #ffffff;
    @include border-radius(3px);
    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.4), $dark-grey 0px 0px 1px inset;
    transition: all 0.15s linear;
    outline: none;
    cursor: pointer;
    &:hover,
    &:focus {
      background: $button-hover;
      border: 0;
      box-shadow: 0 2px 5px 0 rgba(0,0,0,0.5), #505050 0px 0px 1px inset;
    }
  }
}

label, input {
    font-family: 'Merriweather', sans-serif;
}

header {
  background: $dark-grey;
  @include breakpoint(break-1) {
    display: flex;
    justify-content: space-between;
  }
  h1 {
    color: $white;
    @include vertical-rhythm(2rem, 0, 0);
    font-weight: 700;
    padding: $line-height-base #{$line-height-base * 0.5};
    a {
      text-decoration: none;
      color: $white;
    }
  }
  nav {
    ul {
      display: flex;
      align-items: stretch;
      justify-content: space-between;
      width: 100%;
      overflow-x: hidden;
      border-bottom: 1px solid $button-primary;
      margin-bottom: 0;
      @include breakpoint(break-1) {
        border: none;
        justify-content: flex-end;
      }
      li {
        padding: 0;
        margin: 0;
        a {
          display: block;
          padding: 0 #{$line-height-base * 0.5} $line-height-base #{$line-height-base * 0.5};
          @include breakpoint(break-1) {
            padding: #{$line-height-base * 1.5} $line-height-base;
          }
          color: $white;
          text-decoration: none;
          &:hover {
            text-decoration: underline;
            @include breakpoint(break-1) {
              text-decoration: none;
              background: $button-primary;
            }
          }
        }
      }
    }
  }
}

#home-page {
  section {
    @include breakpoint(break-0) {
      padding: $line-height-base;
    }
    @include breakpoint(break-2) {
      padding: #{3 * $line-height-base} #{5 * $line-height-base};
    }
    .container {
      max-width: 100%;
      @include breakpoint(break-2) {
        display: flex;
      }
      margin: 0 auto;
      .content {
        @include breakpoint(break-2) {
          width: 50%;
        }
      }
      .illustration {
        @include breakpoint(break-2) {
          width: 50%;
          margin-left: #{2 * $line-height-base};
        }
        img {
          max-width:100%;
        }
      }
    }
  }

  .hero {
    background: $dark-grey;
    //opacity: 0.5;
    color: $white;
    a {
      color: $white;
    }
    .container {
      .illustration {
        @include breakpoint(break-2) {
          width: 50%;
          margin-left: #{2 * $line-height-base};
        }
        img {
          max-width:100%;
          max-height:100%;
          @include breakpoint(break-2) {
            max-width: 60%;
            position: absolute;
          }
        }
      }
    }
    h1 {
      @include vertical-rhythm(2.5rem, 1, 0);
    }
  }

  .pain {
    .container {
      .illustration {
        max-height: #{18 * $line-height-base};
        img {
          max-height: 100%;
        }
      }
    }
  }

  .solution {
    .container {
      @include breakpoint(break-1) {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
      }
      .feature {
        //margin-top: 3rem;
        @include breakpoint(break-1) {
          margin-bottom: $line-height-base;
        }
        width: 100%;
        @include breakpoint(break-1) {
          width: 31%;
        }
        img {
          display: block;
          height: #{2.5 * $line-height-base};
          margin-bottom: #{0.5 * $line-height-base};
        }
        h3 {
          @include vertical-rhythm(1.2rem, 1, 0);
          font-weight: bold;
        }
      }
    }
  }

  .release {
    background:linear-gradient( rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6) ),url(/images/release03-1000x500.jpg) center no-repeat;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    @include breakpoint(break-2) {
      background:linear-gradient( rgba(0, 0, 0, 0), rgba(0, 0, 0, 0) ),url(/images/release03-2000x1000.jpg) center no-repeat;
      -webkit-background-size: cover;
      -moz-background-size: cover;
      -o-background-size: cover;
      background-size: cover;
    }
    h2, p, a {
      color: $white;
    }
    .container {
      .content {
        @include breakpoint(break-2) {
          width: 40%;
        }
      }
    }
  }

  .progress {
    .container {
      justify-content: center;
      .content {
        .card {
          @include border-radius(5px);
          background: $light-grey;
          padding: 0 $line-height-base $line-height-base $line-height-base;
          margin-bottom: $line-height-base;
          &.complete {
            background: $button-hover;
            color: $white;
          }
          &.major {
            border: 2px solid $button-primary;
          }
          h3 {
            @include vertical-rhythm(1rem, 1, 0);
            font-family: 'Merriweather', sans-serif;
            font-weight: 800;
            padding-top: $line-height-base;
            margin-bottom: 0;
          }
          ul {
            li.checklist-item {
              padding-top: $line-height-base;
              background-image: url(/images/checklist-item.svg);
              background-repeat: no-repeat;
              background-position: -5px 20px;
              padding-left: 32px;
              margin-bottom: 0;
              h3 {
                padding-top: 0;
              }
              &.checked {
                background-image: url(/images/checklist-item-light-checked.svg);
              }
            }
          }
          p {
            margin-top: $line-height-base;
            margin-bottom: 0;
          }
        }
      }
    }
  }

  .final-cta {
    background: $dark-grey;
    color: $white;
    a {
      color: $white;
    }
    .container {
      justify-content: center;
    }
  }
}

div.full-width {
  padding-left: #{0.5 * $line-height-base};
  padding-right: #{0.5 * $line-height-base};
  @include breakpoint(break-1) {
    padding-left: 0;
    padding-right: 0;
  }
  section.variable-width-container {
    margin: $line-height-base auto;
    width: 100%;
    @include breakpoint(break-1) {
      width: #{map-get($breakpoints, break-1) + "px"};
    }
    h1 {
      @include vertical-rhythm(1.7rem, 0.5, 0.5);
    }
    h2 {
      @include vertical-rhythm(1.4rem, 0.5, 1.5);
    }
    h3 {
        font-family: 'Merriweather', sans-serif;
        font-weight: bold;
    }
    hr {
      margin-bottom: #{2 * $line-height-base};
    }
    img {
      max-width: 100%;
      width: 100%;
    }
    pre.terminal {
      @include vertical-rhythm(1.1rem);
      padding: $line-height-base;
    }
    ul {
      li {
        list-style: disc;
        margin-left: $line-height-base;
        &.blog-index {
          @include vertical-rhythm(1rem, 0.5, 0);
        }
      }
      ol {
        list-style: decimal;
        margin-left: $line-height-base;
      }
    }
    p.date {
      text-align: right;
    }
  }
}

.download {
  .operating-system {
    .logos {
      display: flex;
      img.logo {
        display: block;
        height: ($line-height-base * 3);
        width: auto;
        margin-right: 0.5rem;
      }
    }
    padding: ($line-height-base * 1);
    border: 1px solid #949494;
    margin-bottom: ($line-height-base * 2);
  }
  h1 {
    @include vertical-rhythm(1.7rem, 0.5, 0.5);
  }
  h2 {
    @include vertical-rhythm(1.7rem, 0.5, 0.5);
  }
}

form {
  div {
    label {
      @include vertical-rhythm(1rem);
    }
    input[type="email"] {
      -webkit-appearance: none;
      font-size: 1em;
      @include vertical-rhythm(1rem, 0.25, 0.25);
      border: 0;
      outline: 1px solid $dark-grey;
      padding: ($line-height-base * 0.5) ($line-height-base * 0.5);
      width: 100%;
      box-sizing: border-box;
    }
    input[type="submit"] {
      -webkit-appearance: none;
      font-size: 1em;
      @include vertical-rhythm(1rem, 0.25, 0.25);
      width: 100%;
      display: block;
      text-align: center;
      border: 0;
      padding: $line-height-base * 0.5;
      background-color: $button-primary;
      color: #ffffff;
      @include border-radius(3px);
      box-shadow: 0 2px 5px 0 rgba(0,0,0,0.4), $dark-grey 0px 0px 1px inset;
      transition: all 0.15s linear;
      outline: none;
      cursor: pointer;
      &:hover,
      &:focus {
        background: $button-hover;
        border: 0;
        box-shadow: 0 2px 5px 0 rgba(0,0,0,0.5), #505050 0px 0px 1px inset;
      }
    }
  }
}

.rss-icon {
  height: 1rem;
  padding-right: 0.5rem;
}

form.inline-button {
  @include breakpoint(break-2) {
    display: flex;
    align-items: space-between;
  }
  div {
    input[type="email"] {
      @include breakpoint(break-2) {
        width: 20rem;
        margin-right: $line-height-base;
      }
    }
    input[type="submit"] {
      display: block;
      padding: #{$line-height-base * 0.5} $line-height-base;
    }
  }
}

footer {
  border-top: 1px solid $light-grey;
  background: $dark-grey;
  display: flex;
  justify-content: center;
  @include breakpoint(break-0) {
    padding: $line-height-base #{$line-height-base * 0.5};
  }
  @include breakpoint(break-2) {
    padding: $line-height-base #{5 * $line-height-base};
  }
  .content {
    width: 100%;
    @include breakpoint(break-3) {
      width: 70%;
    }
    p {
      margin: 0;
      a {
        color: $white;
        margin-right: $line-height-base;
      }
    }
  }
}

#pricing-page {
  section.variable-width-plans-container {
    margin: $line-height-base auto;
    width: 100%;
    @include breakpoint(break-2) {
      width: #{map-get($breakpoints, break-2) + "px"};
    }

    div.top {
      h1 {
        @include vertical-rhythm(2.8rem, 0, 2);
      }
      p.lead {
        @include vertical-rhythm(1.7, 0, 0);
        font-weight: bold;
      }
      h1, p.lead {
        @include breakpoint(break-2) {
          text-align: center;
        }
      }
      padding-bottom: $line-height-base;
      @include breakpoint(break-2) {
        padding-bottom: #{$line-height-base * 2};
      }
    }

    .plans {
      @include breakpoint(break-2) {
        display: flex;
      }
      .plan {
        border: 1px solid $mid-grey;
        padding: 0 $line-height-base;
        margin-bottom: $line-height-base;
        @include breakpoint(break-2) {
          margin: 0 #{$line-height-base * 0.5};
          width: 33%;
        }
        h2 {
          @include vertical-rhythm(1.7rem, 0.5, 0.5);
        }
        p.team-size {
          padding-bottom: $line-height-base;
        }
        p.price {
          @include vertical-rhythm(2.5rem, 0.5, 0.0);
        }
        p.timeframe {
          color: $mid-grey;
          @include vertical-rhythm(.75rem, 1, 0.0);
          text-transform: uppercase;
        }

        h2, p.team-size, p.price, p.timeframe, {
          @include breakpoint(break-2) {
            text-align: center;
          }
        }
        .team-size {
          border-bottom: 1px solid $mid-grey;
        }
        p.button {
          @include breakpoint(break-2) {
            margin: $line-height-base;
          }
          a {
            padding-left: 0;
            padding-right: 0;
            width: 100%;
            display: block;
            margin: 0 auto;
          }
        }
      }
    }

    .features {
      outline: 1px solid $mid-grey;
      ul {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        padding: #{$line-height-base * 1.5};
        margin-bottom: 0;
        padding-bottom: 0;
        li {
          background-image: url(/images/tick.svg);
          background-repeat: no-repeat;
          background-position: 0px 0px;
          padding-left: 32px;
          @include vertical-rhythm(1, 1, 0);
          @include breakpoint(break-2) {
            display: block;
            width: 25%;
          }
        }
      }
      p {
        @include vertical-rhythm(1, 1, 0);
        padding-bottom: $line-height-base;
        text-align: center;
      }
    }

    div.open-source-offer {
      padding: #{$line-height-base * 1} 0;
      @include breakpoint(break-2) {
        text-align: center;
      }
      h2 {
        color: $dark-grey;
        @include vertical-rhythm(1.5rem, 1, 1);
        @include breakpoint(break-2) {
          @include vertical-rhythm(1.7rem, 1, 1);
        }
      }
    }

  }
}